Introduction
Tags are a way of adding dimensions to metrics, so they can be sliced,
diced, aggregated, and compared on the front end.
Using tags enables you to observe aggregate performance across a number of hosts
and (optionally) narrow the set further based on specific elements.
In a nutshell, tagging is a method to scope aggregated data.


Tags best practices
A few best practices on tags:

Tags must start with a letter, and after that may contain:

Alphanumerics
Underscores
Minuses
Colons
Periods
Slashes
Other special characters get converted to underscores.
Note: A tag cannot end with a colon (e.g., tag:)

Tags can be up to 200 characters long and support unicode.

Tags are converted to lowercase.

A tag can have a value or a key:value syntax: For optimal functionality,
we recommend constructing tags that use the key:value syntax.
The key is always what precedes the first colon of the global tag definition,
e.g.:

role:database:mysql is parsed as key:role , value:database:mysql
role_database:mysql is parsed as key:role_database , value:mysql
Examples of commonly used metric tag keys are env, instance, name, and role.

device, host, and source are reserved tag keys and cannot be specified in the standard way.

Tags shouldn’t originate from unbounded sources, such as EPOCH timestamps
or user IDs. These tags may impact platform performance and billing.

Agent Tags (datadog.yaml)
DogStatsD Tags
Integration/Check Tags (each check on the local host supports tags by editing the yaml)
Tags generated by other services such as AWS, Azure, GCE, etc.
Tags in the API - note other endpoints support tags as well such as
Events and Metrics
Chef Roles and Puppet Tags (Chef and Puppet use the API -
this may obviously be extended to other configuration management tools by you
or Datadog)
Manually adding tags using the Infrastructure List
(hover over host->select “Inspect”->“Edit Tags”)